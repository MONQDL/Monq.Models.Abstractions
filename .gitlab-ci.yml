image: microsoft/dotnet:2-sdk

variables:
  TYPE: "netcore-library"
  VERSION: "4.0.0"

  MAINAPP_ASP_PROJECT_PATH: "src/$ASP_PROJECT_NAME"
  TEST_MAINAPP_ASP_PROJECT_PATH: "src/$ASP_PROJECT_NAME.Tests"
  SRC_PATH: "src"

  NUGET_PACKAGES: /storage/nuget

build_project:
  stage: build
  script:
    - dotnet restore --packages /storage/nuget
    - dotnet build -c Release --no-restore $MAINAPP_ASP_PROJECT_PATH
  except:
    - tags
  artifacts:
    untracked: true
    expire_in: 1 day

test_image:
  stage: test
  script:
    - dotnet restore --packages /storage/nuget
    - dotnet test $TEST_MAINAPP_ASP_PROJECT_PATH -c Release --no-restore
  except:
    - tags
  dependencies:
    - build_project

pack_image:
  stage: pack
  script:
    - dotnet restore --packages /storage/nuget
    - pack_dotnet_projects
  only:
    - master
  dependencies:
    - build_project
  artifacts:
    untracked: true
    expire_in: 1 day

pack_image_dev:
  stage: pack
  script:
    - dotnet restore --packages /storage/nuget
    - pack_dotnet_projects_dev
  only:
    - develop
  dependencies:
    - build_project
  artifacts:
    untracked: true
    expire_in: 1 day

publish_image:
  stage: publish
  script:
    - publish_dotnet_projects
  only:
    - master
  dependencies:
    - pack_image

publish_image_dev:
  stage: publish
  script:
    - publish_dotnet_projects
  only:
    - develop
  dependencies:
    - pack_image_dev

stages:
  - build
  - test
  - pack
  - publish

# ---------------------------------------------------------------------------

.auto_devops: &auto_devops |
  # Auto DevOps variables and functions
  [[ "$TRACE" ]] && set -x

  function pack_dotnet_projects() {
    dotnet pack -c Release --no-restore $MAINAPP_ASP_PROJECT_PATH --include-symbols --include-source
    
    # Pack other asp projects
    if [ -z ${ASP_PROJECTS+x} ]; then echo "ASP_PROJECTS is unset. SKiPED.";
    else 
      IFS='; ' read -r -a PROJECTS <<< "$ASP_PROJECTS"
      for PROJECT in "${PROJECTS[@]}"; do
          ASP_PROJECT=`echo $PROJECT | awk -F ':' '{print $1;}'`
          echo "publishing project $ASP_PROJECT"
          dotnet pack -c Release --no-restore "$SRC_PATH/$ASP_PROJECT" --include-symbols --include-source
      done
    fi
  }

  function pack_dotnet_projects_dev() {
    dotnet pack -c Release --no-restore --version-suffix "build-$CI_JOB_ID" $MAINAPP_ASP_PROJECT_PATH --include-symbols --include-source
    
    # Pack other asp projects
    if [ -z ${ASP_PROJECTS+x} ]; then echo "ASP_PROJECTS is unset. SKiPED.";
    else 
      IFS='; ' read -r -a PROJECTS <<< "$ASP_PROJECTS"
      for PROJECT in "${PROJECTS[@]}"; do
          ASP_PROJECT=`echo $PROJECT | awk -F ':' '{print $1;}'`
          echo "publishing project $ASP_PROJECT"
          dotnet pack -c Release --no-restore --version-suffix "build-$CI_JOB_ID" "$SRC_PATH/$ASP_PROJECT" --include-symbols --include-source
      done
    fi
  }

  function publish_dotnet_projects() {
    dotnet nuget push $MAINAPP_ASP_PROJECT_PATH/bin/Release/*.nupkg -s $NUGET_URI -k $NUGET_USER:$NUGET_PASSWORD
    
    # Publish other asp projects
    if [ -z ${ASP_PROJECTS+x} ]; then echo "ASP_PROJECTS is unset. SKiPED.";
    else 
      IFS='; ' read -r -a PROJECTS <<< "$ASP_PROJECTS"
      for PROJECT in "${PROJECTS[@]}"; do
          ASP_PROJECT=`echo $PROJECT | awk -F ':' '{print $1;}'`
          echo "publishing project $ASP_PROJECT"
          dotnet nuget push $SRC_PATH/$ASP_PROJECT/bin/Release/*.nupkg -s $NUGET_URI -k $NUGET_USER:$NUGET_PASSWORD
      done
    fi
  }

before_script:
  - *auto_devops
